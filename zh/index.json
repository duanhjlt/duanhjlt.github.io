[{"content":"有不少人拥有多个github账号，比如个人账号，用户开源的账号。那如何在同一台电脑上管理多个github账号呢？\n1. 使用https方式 git clone https://duanhjlt@github.com/duanhjlt/blog.git git clone https://duan0120@github.com/duan0120/xvm.git 2. 使用ssh方式 2.1 创建ssh key ssh-keygen -t ed25519 -C \u0026#34;duanhjlt@163.com\u0026#34; -f ~/.ssh/id_ed25519_github1 ssh-keygen -t ed25519 -C \u0026#34;duanhjlt@gmail.com\u0026#34; -f ~/.ssh/id_ed25519_github2 2.2 将ssh公钥添加到对应的github账号 2.3 设置ssh 2.3.1 设置配置文件 # ~/.ssh/config Host github.com HostName github.com User git IdentityFile ~/.ssh/id_ed25519_github2 Host github1.com HostName github.com User git IdentityFile ~/.ssh/id_ed25519_github1 2.3.2 清除当前ssh代理中的密钥 ssh-add -D 2.3.3 添加需要的密钥 ssh-add ~/.ssh/id_ed25519_github1 ssh-add ~/.ssh/id_ed25519_github2 2.3.4 验证加载的密钥 ssh-add -l 2.3.5 测试链接 ssh -T git@github.com ssh -T git@github1.com 2.4 clone 代码 git clone git@github.com:duanhjlt/blog.git git clone git@github1.com:duan0120/xvm.git ","permalink":"https://www.timestamps.top/zh/posts/githubs-on-the-same-os/","summary":"有不少人拥有多个github账号，比如个人账号，用户开源的账号。那如何在同一台电脑上管理多个github账号呢？ 1. 使用https方式 git clone https://duanhjlt@github.com/duanhjlt/blog.git git clone https://duan0120@github.com/duan0120/xvm.git 2. 使用ssh方式 2.1 创建ssh key ssh-keygen -t ed25519 -C \u0026#34;duanhjlt@163.com\u0026#34; -f ~/.ssh/id_ed25519_github1 ssh-keygen -t ed25519 -C \u0026#34;duanhjlt@gmail.com\u0026#34; -f ~/.ssh/id_ed25519_github2 2.2 将ssh公钥添加到对应的github账号 2.3 设置ssh 2.3.1 设置配置文件 # ~/.ssh/config Host github.com HostName","title":"同一个系统上管理多个github账号"},{"content":"什么是时间戳？ 时间戳是一串字符或编码信息，用于表示特定的日期和时间，通常在计算机中用于记录事件发生的时间。它通常表示自Unix纪元（1970年1月1日00:00:00 UTC）以来的秒数或毫秒数。时间戳广泛应用于数据库、日志系统和应用程序中，以跟踪事件、同步数据或管理时间敏感的操作。\n时间戳的主要特点： 精度：时间戳可以精确到秒、毫秒甚至微秒。\n格式：常见格式包括Unix时间戳（如1697054700）、ISO 8601（如2023-10-11T18:05:00Z）和人类可读格式（如2023年10月11日18:05）。\n应用：用于Web开发、API、区块链和数据分析，以确保精确的时间跟踪。\n如何将日期时间转换为Unix时间戳? 本页面提供日期时间与时间戳格式之间的转换工具，帮助开发者、数据分析师和爱好者高效处理时间数据。\n常见时间戳问答 1. 时间戳和日期时间有什么区别？ 时间戳是表示某一时间点的数字，通常基于Unix纪元（例如1697054700秒）。日期时间是包含日期和时间组件的人类可读格式（例如2023-10-11 18:05:00）。时间戳便于机器处理，而日期时间便于人类理解。\n2. 如何将日期时间转换为Unix时间戳？ 将日期时间转换为Unix时间戳：\n使用编程语言如JavaScript：Date.parse(\u0026quot;2023-10-11T18:05:00Z\u0026quot;) / 1000 返回 1697054700。\n或使用我们的在线工具：输入日期时间，选择格式，即可立即获得对应的时间戳。\n3. 如何将Unix时间戳转换为日期时间？ 将Unix时间戳转换为日期时间：\n在JavaScript中：new Date(1697054700 * 1000).toISOString() 返回 2023-10-11T18:05:00.000Z。\n使用我们的转换器：输入时间戳，即可按您喜欢的格式显示日期时间。\n4. 为什么我的时间戳显示的时间与预期不同？ 这通常是由于时区差异。Unix时间戳基于UTC，但您的本地时间可能不同。确保您的工具或代码考虑了正确的时区偏移（例如，北京为UTC+8）。\n5. 什么是Unix纪元？ Unix纪元是Unix时间戳的起点，定义为1970年1月1日00:00:00 UTC。大多数时间戳以该点开始计算秒数或毫秒数。\n6. 时间戳会受闰秒影响吗？ Unix时间戳不考虑闰秒。它们假设每天有86400秒，这简化了计算，但在精确的科学应用中可能导致微小偏差。\n7. 我可以在编程项目中使用时间戳吗？ 当然可以！时间戳在以下方面至关重要：\n记录事件（例如用户操作、错误）。\n跨系统同步数据。\n在数据库中存储创建或修改时间。 使用我们的工具为您的项目生成或转换时间戳。\n8. Unix时间戳的最大值是多少？ 对于32位系统，Unix时间戳的最大值为2147483647（2038年1月19日03:14:07 UTC），即“2038年问题”。64位系统支持更大的值，远远超出实际限制。\n","permalink":"https://www.timestamps.top/zh/posts/timestamps/","summary":"什么是时间戳？ 时间戳是一串字符或编码信息，用于表示特定的日期和时间，通常在计算机中用于记录事件发生的时间。它通常表示自Unix纪元（1970年1月1日00:00:00 UTC）以来的秒数或毫秒数。时间戳广泛应用于数据库、日志系统和应用程序中，以跟踪事件、同步数据或管理时间敏感的操作","title":"如何将日期时间转换为Unix时间戳 - 免费工具 | DevUtils"},{"content":"Memora：iOS与macOS平台的安全稍后读应用 Memora 是一款精心设计的「稍后读\u0026amp;笔记」工具，专为忙碌人士打造，助你高效收集、整理和回顾所有有价值的内容。无论是文章、网页还是日常灵感，Memora让你随时随地保存重要信息，永不遗失。\n核心功能： 网页离线保存与阅读 作为iOS和macOS平台强大的稍后读工具，Memora可将网页完整保存至本地，避免404错误困扰，让你在无网络环境下也能随时查阅内容。\n隐私优先的本地存储 你的数据安全是我们的首要考量。Memora采用本地存储+iCloud安全同步机制，所有数据仅存于你的设备，我们绝不收集用户信息，提供最高级别的隐私保护。\n纯净无干扰阅读模式 享受剔除广告和杂乱元素的清爽阅读界面。即将推出的笔记功能和全文搜索将使Memora成为更完善的知识管理伴侣。\n智能标签与多维搜索 轻松收藏和归档网页内容。通过自定义标签分类网址，支持标签筛选和关键词搜索等多种检索方式，快速定位目标内容。\n完全掌控你的数字知识库 Memora赋予你绝对控制权，让你在专注无干扰的环境中系统化管理知识灵感和阅读内容。\n选择Memora的理由： 支持iOS/macOS双平台，iCloud无缝同步\n网页离线保存，杜绝链接失效风险\n本地加密存储，零数据收集政策\n灵活的标签体系与智能搜索\n沉浸式阅读模式提升专注力\n立即体验 下载iOS/macOS平台最佳的稍后读应用Memora，用更私密便捷的方式管理你的阅读收藏。\n（注：译文在保持专业性的同时采用了更符合中文阅读习惯的短句结构和四字短语，如\u0026quot;永不遗失\u0026quot;、\u0026ldquo;清爽阅读\u0026quot;等；技术术语如\u0026quot;iCloud同步\u0026quot;等保留原名；功能描述部分使用中文项目符号保持视觉一致性；营销话术转化为符合中文用户认知的表达方式，如\u0026quot;数字知识库\u0026quot;等）\n","permalink":"https://www.timestamps.top/zh/posts/memora/","summary":"Memora：iOS与macOS平台的安全稍后读应用 Memora 是一款精心设计的「稍后读\u0026amp;笔记」工具，专为忙碌人士打造，助你高效收集、整理和回顾所有有价值的内容。无论是文章、网页还是日常灵感，Memora让你随时随地保存重要信息，永不遗失。 核心功能： 网页离线保存与阅读 作为iOS和m","title":"Memora：专为iOS和macOS设计的离线稍后读应用"},{"content":"xvm-windows 是 xvm 的 windows 版本，使用方式和 xvm 基本一致。\n安装方式 git clone https://github.com/duan0120/xvm-windows.git %USERPROFILE%/.xvm 配置环境变量\nXVM_ROOT=%USERPROFILE%/.xvm 将下面路径加入到**%PATH%**中\n%XVM_ROOT%\\versions\\node\\default %XVM_ROOT%\\versions\\go\\default\\bin %XVM_ROOT%\\versions\\python\\default %XVM_ROOT%\\versions\\python\\default\\Scripts 使用方式 查看版本\nxvm -v 获取帮助\nxvm -h xvm help node Node.js 查看版本\n# 查看已发布版本 xvm node ls-remote # 查看已发布 lts 版本 xvm node ls-remote --lts # 查看本地已安装版本 xvm node list 安装指定版本\nxvm node install v18.19.1 卸载指定版本\nxvm node uninstall v18.19.1 切换版本\nxvm node use v18.19.1 Go 查看版本\nxvm go ls-remote xvm go list 安装指定版本\nxvm go install go1.19.2 # 指定架构，amd64/386/arm64, 默认为amd64 xvm go install go1.13.10 --arch=amd64 如果需要指定下载地址，可以在 %XVM_ROOT%/.xvm/scripts/go-scripts/proxy 文件中指定，如 https://golang.google.cn\n卸载指定版本\nxvm go uninstall go1.19.2 切换版本\nxvm go use go1.19.2 Python 查看版本\nxvm python ls-remote xvm python list 安装指定版本\nxvm python install 3.12.1 # 指定架构，amd64/386/arm64, 默认为amd64 xvm python install 3.12.1 --arch=arm64 创建虚拟环境\nxvm python alias test 3.12.1 激活虚拟环境\nxvm python use test 卸载指定版本\nxvm python uninstall 3.12.1 # 删除虚拟环境 xvm python uninstall test 切换版本\nxvm python use 3.12.1 ","permalink":"https://www.timestamps.top/zh/posts/xvm-windows/","summary":"xvm-windows 是 xvm 的 windows 版本，使用方式和 xvm 基本一致。 安装方式 git clone https://github.com/duan0120/xvm-windows.git %USERPROFILE%/.xvm 配置环境变量 XVM_ROOT=%USERPROFILE%/.xvm 将下面路径加入到**%PATH%**中 %XVM_ROOT%\\versions\\node\\default %XVM_ROOT%\\versions\\go\\default\\bin %XVM_ROOT%\\versions\\python\\default %XVM_ROOT%\\versions\\python\\default\\Scripts 使用方式 查看版本 xvm -v 获取帮助 xvm -h xvm help node Node.js 查看版本 # 查看已发布版本 xvm node ls-remote # 查看已发布 lts 版本 xvm node ls-remote --lts # 查看本地已安装版本 xvm node list 安装指定版本 xvm node install v18.19.1 卸载指定版本 xvm node uninstall v18.19.1 切换","title":"xvm-windows：Node.js、Go、Python版本管理器"},{"content":"作为一名全干工程师，我们会在同一个电脑上安装各种工具，然而又会因为各种原因，需要使用这些工具的不同版本，版本管理就变的十分重要。\n我们会使用 nvm 来管理 Node.js；\n我们会使用 gvm 来管理 Go；\n我们会使用 pyenv 或者 Conda 来管理 Python；\n这些工具都十分强大，但使用方式却各不相同，一段时间不使用，就不得不重新熟悉每个工具的使用方式。重要的是，平白无故又多了好几个软件。\n在一次重装系统之后，终于忍无可忍\u0026hellip; 其实我的需求很简单，也用不到版本管理器的那些高级功能，我只是需要一个小巧的版本管理器，使用统一的管理方式，统一的命令。\n因此 xvm 应运而生，融合了 Node.js， Go， Python 等的版本管理工具，虽然没有专业的工具那么强大，但小巧且命令统一。\nxvm 是 linux 和 macos 上的版本管理工具，windows 上可以使用 xvm-windows\n安装方式 curl -o- https://raw.githubusercontent.com/duan0120/xvm/main/install.sh | bash 或者\ngit clone https://github.com/duan0120/xvm.git ~/.xvm 将下面代码放到 ~/.bashrc 或者 ~/.zshrc 中，并重新 source\nexport XVM_ROOT=~/.xvm [ -s \u0026#34;$XVM_ROOT/xvm\u0026#34; ] \u0026amp;\u0026amp; source \u0026#34;$XVM_ROOT/xvm\u0026#34; 使用方式 查看版本 xvm -v 获取帮助\nxvm -h xvm help node Node.js 查看版本\n# 查看发布版本 xvm node ls-remote # 查看 lts 版本 xvm node ls-remote --lts # 查看已安装版本 xvm node list # 查看默认版本 xvm node default 安装指定版本\n# 安装指定版本 xvm node install v18.19.1 # 安装指定版本，并设置为默认版本, 重启terminal或者source生效 xvm node install v18.19.1 --default 卸载指定版本\nxvm node uninstall v18.19.1 切换版本\n# 临时切换指定版本 xvm node use v18.19.1 # 临时切换指定版本，并设置为默认 xvm node use v18.19.1 --default Go 查看版本\nxvm go ls-remote xvm go list 安装指定版本\nxvm go install go1.19.2 # 安装并设置为默认版本 xvm go install go1.19.2 --default # xvm go install go1.13.10 --default --arch=amd64 如果需要指定下载地址，可以在 ~/.xvm/scripts/go-scripts/proxy 文件中指定，如 https://golang.google.cn\n卸载指定版本\nxvm go uninstall go1.19.2 切换版本\n# 临时切换指定版本 xvm go use go1.19.2 # 临时切换指定版本，并设置为默认 xvm go use go1.19.2 --default 查看默认版本\nxvm go default Python xvm 也支持管理虚拟环境，并且操作很简单\n安装依赖\nPython使用的是源码编译安装，需要安装依赖，请参考 https://devguide.python.org/getting-started/setup-building/\n查看版本\nxvm python ls-remote xvm python list 安装指定版本\nxvm python install 3.12.0 # 安装并设置为默认版本 xvm python install 3.12.0 --default 切换版本\n# 临时切换指定版本 xvm python use 3.12.0 # 临时切换指定版本，并设置为默认 xvm python use 3.12.0 --default 查看默认版本\nxvm python default 创建虚拟环境\nxvm python alias 3.12.0 venv 激活虚拟环境\nxvm python activate venv 撤销虚拟环境\nxvm python deactivate 卸载指定版本\nxvm python uninstall 3.12.0 # 删除虚拟环境 xvm python uninstall venvxVM：Node.js、Go、Python版本管理器 ","permalink":"https://www.timestamps.top/zh/posts/xvm/","summary":"作为一名全干工程师，我们会在同一个电脑上安装各种工具，然而又会因为各种原因，需要使用这些工具的不同版本，版本管理就变的十分重要。 我们会使用 nvm 来管理 Node.js； 我们会使用 gvm 来管理 Go； 我们会使用 pyenv 或者 Conda 来管理 Python； 这些工具都十分强大，但使用方式却各不相同，一段时间不使用","title":"XVM：Node.js、Go、Python版本管理器X Version Manger"},{"content":"欢迎访问 Blackscreen.space，这里以黄色的温暖与活力为核心。我们深知黄色的心理意义，它象征幸福、阳光与积极正能量。Blackscreen.space 致力于打造以黄屏为核心的多功能平台，从提升积极情绪与能量到优化视觉清晰度，为您的数字体验带来全面升级。\n黄屏的积极与活力特质 光明与乐观的象征 黄色代表幸福与阳光，传递出明亮、轻快与乐观的气息。在 Blackscreen.space 上使用黄屏，能迅速提升积极氛围，营造充满活力的数字空间。其丰富的黄色调不仅振奋人心，还为观众带来愉悦的视觉享受。\n亲切与友好的魅力 黄色以其可爱与亲和力闻名，常用于食品包装与各类产品设计，深受男女喜爱。通过 Blackscreen.space 的黄屏，您可以为数字形象注入友好、平易近人且愉悦的特质，增强用户好感度。\n黄屏助力视觉沟通 打造吸睛的媒体广告 黄色象征温暖、欢乐与乐观，在不同光线与场景下传递多样情感。全球众多知名品牌在食品、家电、能源与科技领域采用黄色标识。借助 Blackscreen.space 的黄屏，制作引人入胜的广告内容，激发积极情绪，与观众建立深层共鸣。\n突出折扣与吸引目光 黄色因其活力与动态感，成为吸引注意力的绝佳选择。在 Blackscreen.space 上利用黄屏，您可以轻松突出折扣、优惠或关键信息，打造充满生机的数字环境，吸引并留住访客。\n黄屏带来的健康与舒适 护眼与舒适的显示效果 相较于蓝光的潜在负面影响，黄屏提供更健康的选择。Blackscreen.space 的温暖黄色光芒能缓解长时间使用电子设备带来的不适与眼疲劳，提升视觉舒适度，呵护眼睛健康。\n柔和阅读与放松照明 黄光是阅读或营造放松氛围的理想光源。与增强专注的白光不同，Blackscreen.space 的黄屏带来舒缓效果，减轻眼部压力。沉浸在温馨的光芒中，享受阅读或休闲时光。\n黄屏激发创意表达 摄影中的黄光创意 黄光常为摄影增添怀旧与历史感，营造独特氛围。通过 Blackscreen.space 的黄屏，您可以尝试不同角度与光线，拍摄出令人惊艳的肖像与视觉作品，唤起永恒与魅力的意境。\n","permalink":"https://www.timestamps.top/zh/posts/yellow-screen/","summary":"欢迎访问 Blackscreen.space，这里以黄色的温暖与活力为核心。我们深知黄色的心理意义，它象征幸福、阳光与积极正能量。Blackscreen.space 致力于打造以黄屏为核心的多功能平台，从提升积极情绪与能量到优化视觉清晰度，为您的数字体验带来全面升级。 黄屏的积极与活力","title":"Yellow Screen"},{"content":"欢迎访问 Blackscreen.space，这里以红色的动态与迷人魅力为核心。我们深知红色是一种引人注目的色彩，承载着丰富的含义与联想。Blackscreen.space 致力于打造以红屏为核心的多功能平台，从激发强烈情感与活力到优化视觉效果，为您的数字生活注入无限可能。\n红屏的心理魅力 引人注目与震撼力 红色向来以其吸睛的特质著称，是一种强烈的视觉刺激物。它的心理意义丰富多样，在不同文化中象征着力量、高贵、愤怒、激情乃至幸福。红色的多重解读使其成为激发情感与传递文化内涵的独特工具。\n激发热情与活力 红色以激发热情与能量著称，能够唤起欣快、活力甚至警觉的情绪。它让人感到温暖而充满动力。借助 Blackscreen.space 的红屏功能，您可以打造引人入胜且充满活力的视觉体验。\n红屏的多样应用 媒体与广告中的红屏效应 红屏散发温暖与高能量，是媒体与广告的理想选择。不同强度的红色可唤起激情、危险、冒险或诱惑等情感。Blackscreen.space 让您灵活运用红色传递品牌信息，在食品行业激发食欲，或在科技与工程领域展现热情与速度，吸引观众目光。\n提升视频通话的红屏魅力 在视频会议中，红屏能营造独特而深刻的氛围。结合红光散射与红色服饰，您可以传递温暖并留下难忘印象。Blackscreen.space 的红屏与环境光搭配，提升面部吸引力，为通话增添积极与乐观的气息。\n营造戏剧化氛围 无论是沉浸于悬疑小说，还是与朋友共创恐怖派对，红屏都能带来戏剧化的沉浸感。Blackscreen.space 的红屏替代刺眼灯光，增强环境氛围，让体验更具张力与吸引力。让红色为恐怖故事或游戏增添悬念与刺激。\n","permalink":"https://www.timestamps.top/zh/posts/red-screen/","summary":"欢迎访问 Blackscreen.space，这里以红色的动态与迷人魅力为核心。我们深知红色是一种引人注目的色彩，承载着丰富的含义与联想。Blackscreen.space 致力于打造以红屏为核心的多功能平台，从激发强烈情感与活力到优化视觉效果，为您的数字生活注入无限可能。 红屏的心理","title":"Red Screen"},{"content":"绿屏的舒缓与放松魅力 连接自然之美 绿色是大自然的象征，对我们的内心平静与纯净感有着深远影响。在融入绿色元素的环境中，人们往往感到更加放松与自在。公共场所、餐厅和酒店常通过设计、家具及植物引入绿色元素。借助 Blackscreen.space 的绿屏，您可以将自然的舒缓气息融入数字空间。\n减压与提升专注力 凝视绿色——无论是置身自然、浏览照片，还是使用鲜艳的绿屏——都能带来平静与放松的效果。绿色与宁静紧密相连，有助于缓解压力、增强自控力并提升专注度。通过绿屏的力量，打造一个宁静且高效的数字环境。\n绿屏的实用影响力 打造引人注目的广告牌 色彩在吸引客户与塑造品牌形象中至关重要。精心设计的绿屏广告牌能激发情感、抓住眼球并留下深刻印象。绿色传递共鸣、专业性与信任感，利用 Blackscreen.space 的绿屏工具，最大化您的广告视觉效果。\n提升影视与摄影效果 绿屏技术在电影制作与摄影领域广受欢迎。Blackscreen.space 的绿色背景便于后期移除并替换为多样化场景，为创作者提供无限灵活性。释放想象力，利用绿屏的多功能性，打造视觉惊艳的影片与照片。\n革新图像与视频内容 绿屏是内容创作的强大助力。通过 Blackscreen.space，您可以轻松替换背景、添加特效或调整色彩，塑造独特视觉风格。让绿屏的魔力为您的图像与视频注入魅力，为观众带来难忘体验。\n","permalink":"https://www.timestamps.top/zh/posts/green-screen/","summary":"绿屏的舒缓与放松魅力 连接自然之美 绿色是大自然的象征，对我们的内心平静与纯净感有着深远影响。在融入绿色元素的环境中，人们往往感到更加放松与自在。公共场所、餐厅和酒店常通过设计、家具及植物引入绿色元素。借助 Blackscreen.space 的绿屏，您可以将自然的舒缓气息融入数字空间。 减压与提升专注力 凝视绿色——无论","title":"Green Screen"},{"content":"欢迎访问 Blackscreen.space，这里以宁静与灵感为核心。我们相信蓝色能够唤起平静、稳定与高效的感受。\nBlue Screen的宁静与激励力量 宁静、安全与秩序 蓝屏让人联想到宁静与平和的情感。蓝色常与安静、安全及秩序感相联系，传递出可靠与稳定的气质。这种颜色不仅令人安心，还能激发信任与自信。\n提升生产力与专注力 研究显示，蓝色环境有助于提升生产力，是办公空间设计的优选色彩。蓝屏营造的平静氛围能帮助您保持专注，释放最佳潜能。利用 Blackscreen.space 的蓝屏功能，打造高效的工作与学习空间。\n蓝屏的实用场景 营造宁静与积极氛围 蓝屏唤起天空、海洋与黄昏的意象，带来宁静与积极的情感。通过 Blackscreen.space，您可以享受蓝屏带来的舒缓体验，为数字生活增添一抹平和与放松。\n高效复制与图像分层 Blackscreen.space 的蓝屏技术让图像复制与分层变得简单高效。无论是艺术创作还是教育用途，蓝屏都能支持精准编辑与呈现，助您展现卓越技能，令人叹为观止。\n优化视觉内容创作 无需高昂成本或远离工作场所，您也能打造引人注目的视觉内容。Blackscreen.space 的专业蓝屏背景能提升品牌形象，强化信息传递，帮助您在竞争中脱颖而出，创作独具特色的视频内容。\n蓝屏助力在线交流 呈现专业形象 在线会议中，以最佳状态展示自己至关重要。Blackscreen.space 的蓝屏背景提供柔和均匀的光线，营造视觉吸引力十足的环境，避免分散注意力的阴影，让您展现专业与从容的风采。\n","permalink":"https://www.timestamps.top/zh/posts/blue-screen/","summary":"欢迎访问 Blackscreen.space，这里以宁静与灵感为核心。我们相信蓝色能够唤起平静、稳定与高效的感受。 Blue Screen的宁静与激励力量 宁静、安全与秩序 蓝屏让人联想到宁静与平和的情感。蓝色常与安静、安全及秩序感相联系，传递出可靠与稳定的气质。这种颜色不仅令人安心，还能激发信","title":"Blue Screen"},{"content":"被工作追着跑，吃饭选择别再烧脑！“饭点儿”APP来救场\n身为上班族，每天忙碌于工作，本就神经紧绷。可一到中午、晚上这些饭点儿，又要被“吃什么”这个难题折磨。打开外卖软件，菜品繁多，刷来刷去，眼睛都花了，还是毫无头绪，宝贵的午休时间就这样在纠结中流逝。出去觅食吧，面对街边密密麻麻的店铺，选择困难症瞬间发作，饥肠辘辘却无从下手。这种纠结不定的感觉，是不是让你头疼不已？\n别担心，“饭点儿”APP就是你的救星，专为广大上班族量身打造，轻松解决吃饭选择难题。\n“饭点儿”最大的亮点，就是把选择的难题变成有趣的探索。无需在众多选项中苦苦挣扎，只需轻松摇一摇手机，一款附近的优质餐馆就会出现在你眼前。这种简单又充满趣味的交互方式，没有复杂的操作门槛，人人都能快速上手，让找餐馆变得像玩游戏一样轻松。\n每次摇一摇，都是一次新的惊喜。“饭点儿”会精准提供推荐餐馆的距离和具体位置，还有多角度的饭馆实景照片，让你还没到店，就能对餐馆有直观了解，提前感受用餐氛围。无论你是想找一家环境优雅的西餐厅犒劳自己，还是寻觅一家烟火气十足的小饭馆品尝家乡味道，“饭点儿”都能满足你。\n别再让吃饭选择成为负担，下载“饭点儿”APP ，让摇一摇开启美味新体验，从此告别饭点儿纠结，轻松享受每一餐！\n","permalink":"https://www.timestamps.top/zh/posts/fan-dian-er/","summary":"被工作追着跑，吃饭选择别再烧脑！“饭点儿”APP来救场 身为上班族，每天忙碌于工作，本就神经紧绷。可一到中午、晚上这些饭点儿，又要被“吃什么”这个难题折磨。打开外卖软件，菜品繁多，刷来刷去，眼睛都花了，还是毫无头绪，宝贵的午休时间就这样在纠结中流逝。出去觅食吧，面对街边密密麻麻的店","title":"饭点儿"},{"content":"欢迎访问 Blackscreen.space，这里以纯净而耀眼的白色为核心。我们深信，简洁与清晰是塑造卓越视觉体验的基础。\n白屏的力量 纯净清晰的视觉体验 Blackscreen.space 为您呈现白屏的极致美感。作为一块纯净的数字画布，它让您的图像与照片以惊艳的清晰度脱颖而出。无论是复制图片还是开启全新设计，White Screen都是追求精确与创意的理想选择，提升您的视觉呈现效果。\n优化的照明与平衡 通过 Blackscreen.space，您可以轻松获得理想的照明条件。无论是人像摄影还是专业工作室搭建，白屏作为可靠的光源，确保光线均匀柔和。其明亮的白色特性为您的创意项目增添光彩与深度，助力打造出色的视觉构图。\n白屏的实用价值 检测屏幕死点与优化触摸性能 白屏在排查屏幕问题时表现尤为出色，尤其适用于触摸设备。Blackscreen.space 的纯白背景能清晰揭示任何无响应区域，简化故障诊断与导航过程，帮助您快速提升设备的触摸体验与性能。\n多场景日常应用 白屏不仅限于摄影与数字界面，还能无缝融入日常生活。Blackscreen.space 可作为便携光源，为弱光环境下的阅读或物品查找提供便利；亦可化身化妆灯，带来聚焦照明以确保精准妆容。其明亮背景还能助力清洁，让污渍与异物一览无余。\n激发无限创意 以白屏为起点，释放您的创造力。Blackscreen.space 为动画艺术与故事叙述提供完美平台。只需白纸与笔等简单工具，您即可绘制引人入胜的插图与动画。借助白色的纯粹，将您的想象力转化为生动现实。\n","permalink":"https://www.timestamps.top/zh/posts/whitescreen/","summary":"欢迎访问 Blackscreen.space，这里以纯净而耀眼的白色为核心。我们深信，简洁与清晰是塑造卓越视觉体验的基础。 白屏的力量 纯净清晰的视觉体验 Blackscreen.space 为您呈现白屏的极致美感。作为一块纯净的数字画布，它让您的图像与照片以惊艳的清晰度脱颖而出。无论是复制图片还是开启全新设计，Whit","title":"White Screen"},{"content":"Blackscreen.space 是您探索黑色魅力的终极之选。我们坚信，简约与优雅是打造引人入胜视觉体验的核心所在。\nBlack Screen 的多功能性 无需关闭电源即可调节亮度 Black Screen 的核心功能之一在于，它能够在不完全关闭第二台显示器的情况下实现屏幕变暗。这一特性尤为适合需要在专注游戏或沉浸式电影体验中快速关闭辅助显示器的场景。Black Screen 让您轻松实现屏幕暗化，同时确保视觉沉浸感不受干扰。\n节能环保的明智选择 为响应可持续发展的号召，Blackscreen.space 通过启用黑色屏幕有效降低能耗并减少碳足迹。当您的计算机处于闲置状态时，选择黑屏模式不仅能节约能源，还能为环境保护贡献一份力量。通过简单而有意义的举措，我们携手为地球带来积极改变。\nBlack Screen 的多样化应用 隐秘您的 PC 活动 需要一种低调的方式隐藏计算机运行状态？Blackscreen.space 提供了一个优雅的解决方案。在多显示器环境中，当您希望屏幕保持开启而又不引人注意时，这一功能尤为实用。借助 Black Screen，您可以兼顾隐私保护与工作效率的优化。\n提升屏幕清洁效率 对于追求屏幕洁净的用户，Blackscreen.space 是一个实用的辅助工具。通过显示纯黑背景，即使是最细微的污渍或指纹也会一览无余，从而显著提升清洁效果。只需切换至 Black Screen 模式，您即可轻松确保显示器一尘不染，始终呈现最佳视觉效果。\n游戏与设计的理想搭档 对于游戏玩家和设计师而言，Blackscreen.space 是不可或缺的创作伙伴。其深邃的黑色背景能够增强对比度，将注意力集中于您的内容之上，让您完全沉浸于虚拟世界或设计作品中。您还可以自定义屏幕尺寸和边框颜色，使创作在优雅的黑色画布上绽放光彩。\nBlack Screen：全方位的解决方案 提升专注力与学习效率 在学习过程中保持专注往往充满挑战，尤其是在长时间面对明亮屏幕导致眼部疲劳时。Blackscreen.space 通过提供舒缓的视觉环境，帮助减少干扰并提升专注力。借助其宁静且放松的氛围，您可以更轻松地实现学习目标，优化学习体验。\n眼部舒适与视觉放松 在数字时代，我们的眼睛承受着前所未有的压力。Blackscreen.space 以其柔和的黑色调有效缓解眼部疲劳，为用户提供舒适的视觉体验。无论是长时间工作还是娱乐，Blackscreen.space 都能为您带来持久的视觉享受。\n操作方式 全屏 双击可以进入全屏模式，再双击退出全屏模式\n颜色切换 按鼠标方向键可以在 black screen, white screen, red screen, green screen, blue screen, yellow screen 之间循环切换\n","permalink":"https://www.timestamps.top/zh/posts/blackscreen/","summary":"Blackscreen.space 是您探索黑色魅力的终极之选。我们坚信，简约与优雅是打造引人入胜视觉体验的核心所在。 Black Screen 的多功能性 无需关闭电源即可调节亮度 Black Screen 的核心功能之一在于，它能够在不完全关闭第二台显示器的情况下实现屏幕变暗。这一特性尤为适合需要在专注游戏或沉浸式电影体验中快速关闭辅助显示器的场景。Blac","title":"Black Screen"},{"content":"git 仓库迁移，一般分为两种情况，从仓库 A 迁移到仓库 B 和从本地直接上传到仓库 B。\n从仓库 A 迁移到仓库 B 这种方式比较常见，也有很多 web 端直接支持镜像的方式，但批量的迁移还是要使用命令的，如下：\n$ git clone --bare http://a.com/crazykids.git $ git push --mirror http://b.com/crazykids.git 从本地直接上传到仓库 B 有的时候需要将本地仓库直接全部 push 到仓库 B，比如仓库 A 真的的挂了，或者你有多仓库备份的习惯。一般 push 命令只能将当前 branch 或者已经 checkout 出来的分支 push 的远端。\n增加仓库 B 地址 $ git remote add B http://b.com/crazykids.git 方式1 checkout 所有分支，再push到远端\n$ git fetch origin $ git branch -r | grep origin | grep -v HEAD|while read rb;do lb=$(echo ${rb}|cut -d/ -f 2-);git checkout -b $lb $rb;done $ git branch -r | grep origin | grep -v HEAD|while read rb;do lb=$(echo ${rb}|cut -d/ -f 2-);git push -f B $lb;done $ git push --tags 不但命令麻烦，如果遇到分支差异比较大的，还经常出现问题。\n方式2 $ git fetch origin $ git push B \u0026#39;refs/remotes/origin/*\u0026#39;:\u0026#39;refs/heads/*\u0026#39; \u0026#39;refs/tags/*\u0026#39;:\u0026#39;refs/tags/*\u0026#39; ","permalink":"https://www.timestamps.top/zh/posts/git-mirgration/","summary":"git 仓库迁移，一般分为两种情况，从仓库 A 迁移到仓库 B 和从本地直接上传到仓库 B。 从仓库 A 迁移到仓库 B 这种方式比较常见，也有很多 web 端直接支持镜像的方式，但批量的迁移还是要使用命令的，如下： $ git clone --bare http://a.com/crazykids.git $ git push --mirror http://b.com/crazykids.git 从本地直接上传到仓库 B 有的时候需要将本地仓库直接全部 push 到仓库 B，比如仓库 A 真的","title":"Git 仓库迁移"},{"content":"查看所有分支 $ git branch -a 查看远程分支 $ git branch -r 查看本地分支所关联的远程分支 $ git branch -vv 重命名本地分支 $ git branch -m old_branch new_branch 删除远程分支 $ git branch -d -r origin/old_branch $ git push origin :old_branch 推送新的分支 $ git push -u origin new_branch 设置关联 $ git branch --set-upstream-to=origin/branch branch ","permalink":"https://www.timestamps.top/zh/posts/git_branch/","summary":"查看所有分支 $ git branch -a 查看远程分支 $ git branch -r 查看本地分支所关联的远程分支 $ git branch -vv 重命名本地分支 $ git branch -m old_branch new_branch 删除远程分支 $ git branch -d -r origin/old_branch $ git push origin :old_branch 推送新的分支 $ git push -u origin new_branch 设置关联 $ git branch --set-upstream-to=origin/branch branch","title":"git 分支操作常用命令"},{"content":"00 安装Hugo 到 Hugo Releases 下载对应的操作系统版本的 Hugo 二进制文件\nMac 下可以直接使用 Homebrew 安装：\n$ brew install hugo 01 生成站点 使用 Hugo 快速生成站点\n$ hugo new site /path/to/site 这样就在 /path/to/site 目录里生成了初始站点，进入目录：\n$ cd /path/to/site 02 安装主题 到 主题列表 挑选主题，找到相关的 GitHub 地址，创建目录 themes, 把主题 clone 下来\n$ git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 在配置文件中设置主题名字\ntheme: PaperMod 03 配置文件 Hugo 默认使用的 toml 格式的配置文件，也支持 yaml 格式。 详细说明可以参考 Hugo的官方文档\n示例配置 config.yaml 如下\nbaseURL: \u0026#39;https://blog.crazykids.tech/\u0026#39; theme: \u0026#39;PaperMod\u0026#39; languageCode: \u0026#39;zh-cn\u0026#39; languageName: \u0026#39;简体中文\u0026#39; hasCJKLanguage: true title: \u0026#39;CrazyKids\u0026#39;s Blog\u0026#39; paginate: 15 summaryLength: 120 # 文章概览的自字数，默认70 author: name: \u0026#39;duanhongjin\u0026#39; email: \u0026#39;duanhjlt@163.com\u0026#39; link: \u0026#39;https://blog.crazykids.tech/\u0026#39; enableInlineShortcodes: true enableEmoji: true enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true # minifyOutput: true menu: main: - weight: 1 identifier: \u0026#39;post\u0026#39; name: \u0026#39;文章\u0026#39; url: \u0026#39;/\u0026#39; - weight: 2 identifier: \u0026#39;tags\u0026#39; name: \u0026#39;标签\u0026#39; url: \u0026#39;/tags/\u0026#39; - weight: 3 identifier: \u0026#39;categories\u0026#39; name: \u0026#39;分类\u0026#39; url: \u0026#39;/categories/\u0026#39; - weight: 4 identifier: \u0026#39;about\u0026#39; name: \u0026#39;关于\u0026#39; url: \u0026#39;/about/\u0026#39; outputs: home: - HTML - RSS - JSON params: env: production # to enable google analytics, opengraph, twitter-cards and schema. author: duanhongjin defaultTheme: auto # defaultTheme: light or dark disableThemeToggle: false DateFormat: \u0026#34;2006-01-02\u0026#34; ShowShareButtons: true ShowReadingTime: true # disableSpecialistPost: true displayFullLangName: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true hideFooter: false # 隐藏页脚 ShowWordCounts: true VisitCount: true ShowLastMod: true #显示文章更新时间 ShowToc: true # 显示目录 TocOpen: true # 自动展开目录 extendCodeBackground: false # 代码块是否自动横向展开 comments: true socialIcons: - name: github url: \u0026#34;https://github.com/duanhjlt\u0026#34; - name: RSS url: \u0026#34;index.xml\u0026#34; cover: hidden: false # hide everywhere but not in structured data hiddenInList: false # hide on list pages and home hiddenInSingle: false # hide on single page editPost: URL: \u0026#34;https://github.com/duanhjlt/blog/tree/main/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link markup: highlight: noClasses: false 04 启动博客 $ hugo server -D 本地预览，本地预览网址为 http://localhost:1313\n$ hugo -F --cleanDestinationDir 生成全新的 public 文件夹，这个文件夹可以部署到云服务器上\n05 写文章 $ hugo new new-post.md hugo 会在 content 目录下生成\u0026quot;new-post.md\u0026quot;名字的文件，所有的文章都会放到 content 目录下\n如何自己定义的子目录，如 posts，可以使用命令\n$ hugo new posts/new-post.md 06 文章默认配置 生成文章内部文件头部配置信息包括一些文章名称，时间之类的信息，可以写到 archetypes/default.md 中做为模版，这样生成文章时会自动添加模版里的配置\n示例配置如下:\n--- keywords: [] title: \u0026#39;{{ replace .File.ContentBaseName \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#39; date: {{ .Date }} lastmod: {{ .Date }} draft: false description: author: \u0026#39;duanhongjin\u0026#39; tags: [] categories: [] tocLevels: [\u0026#34;h2\u0026#34;, \u0026#34;h3\u0026#34;, \u0026#34;h4\u0026#34;] comments: true # 本页面是否显示评论 reward: true # 打赏 showToc: true # 显示目录 TocOpen: true # 自动展开目录 hidemeta: false # 是否隐藏文章的元信息，如发布日期、作者等 disableShare: true # 底部不显示分享栏 showbreadcrumbs: true #顶部显示路径 --- 07 部署到GitHub Pages 在 GitHub 上创建仓库，名字可以是 duanhjlt.github.io，也可以是其他的，在 GitHub Pages 进行设置即可\n如果想使用自己的域名，如本站域名 blog.crazykids.tech，可以\n在 dns 增加 blog 到 duanhjlt.gihub.io. 的 CNAME 配置项 在 GitHub 的仓库中增加 CNAME 文件，内容为 blog.crazykids.tech 将 public 文件夹做为 GitHub Pages 的本地仓库，每次生成后，推送到 GitHub 上，GitHub Pages 就会自动部署了\n","permalink":"https://www.timestamps.top/zh/posts/hugo-site/","summary":"00 安装Hugo 到 Hugo Releases 下载对应的操作系统版本的 Hugo 二进制文件 Mac 下可以直接使用 Homebrew 安装： $ brew install hugo 01 生成站点 使用 Hugo 快速生成站点 $ hugo new site /path/to/site 这样就在 /path/to/site 目录里生成了初始站点，进入目录： $ cd /path/to/site 02 安装主题 到 主题列表 挑选主题，找到相关的 GitHub 地址，创建目录 themes, 把主题 clone 下来 $ git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 在配置文件中设置主题名字 theme:","title":"Hugo + Github Pages 建站"},{"content":"中年 iOS/macos 开发\nMemora：专为iOS和macOS设计的离线稍后读应用: Memora是一款安全可靠的稍后读应用，支持网页离线保存、iCloud同步和无干扰阅读体验。通过标签分类和智能搜索，轻松管理你的阅读清单。 Black Screen: 黑色力量的终极目的地, 简约和优雅是迷人视觉体验的核心。 xvm: [node|golang|python] 版本管理 xvm-windows: [node|golang|python] 版本管理 饭点儿: 到饭点儿，轻轻一摇推荐附近的餐馆 It is friday?: Check if it is friday? 联系方式 E-mail: duanhjlt@gmail.com Github: duan0120 X: @duanhjlt Telegram: @duanhjlt ","permalink":"https://www.timestamps.top/zh/about/","summary":"中年 iOS/macos 开发 Memora：专为iOS和macOS设计的离线稍后读应用: Memora是一款安全可靠的稍后读应用，支持网页离线保存、iCloud同步和无干扰阅读体验。通过标签分类和智能搜索，轻松管理你的阅读清单。 Black Screen: 黑色力量的终极目的地, 简约和优雅是迷人视觉体验的核心。 xvm: [node|golang|python] 版本管理 xvm-windows: [node|golang|python]","title":"简介"},{"content":"1. 引言 欢迎访问 CrazyKids’s Blog（以下简称”本网站”）。我们重视您的隐私，并致力于保护您的个人信息。本隐私政策旨在说明我们如何收集、使用和保护您的信息。\n2. 信息收集 2.1 自动收集的信息 我们可能会自动收集以下信息：\n访问日志（IP地址、浏览器类型、访问时间）\n设备信息（操作系统、设备类型）\n浏览行为（访问页面、停留时间） ###2.2 Cookie 使用 本网站使用 Cookie 和类似技术来：\n记住您的偏好设置\n分析网站流量\n改善用户体验\n3. 信息使用 我们收集的信息将用于：\n提供和改进网站服务 分析网站使用情况 优化网站内容和用户体验 防止欺诈和滥用 4. 信息共享 我们不会出售、出租或以其他方式分享您的个人信息，除非：\n获得您的明确同意 法律要求 保护网站及用户权益 5. 第三方服务 本网站使用以下第三方服务：\nGoogle Analytics（网站分析） Google AdSense（广告服务） 这些服务可能收集您的信息，建议您查看它们各自的隐私政策。 6. 数据安全 我们采取适当的技术和组织措施来保护您的信息，防止未经授权的访问、使用或泄露。\n7. 您的权利 您有权：\n访问您的个人信息 更正不准确的信息 要求删除您的信息 反对或限制信息处理 撤回同意 儿童隐私 本网站不面向13岁以下儿童，我们不会故意收集儿童的个人信息。\n隐私政策更新 我们可能会不时更新本隐私政策。更新后的政策将在本页面上发布，并注明最后更新日期。\n联系我们 如果您对本隐私政策有任何问题或建议，请通过以下方式联系我们：\n电子邮件：duanhjlt@gmail.com 适用法律 本隐私政策受中华人民共和国法律管辖。 ","permalink":"https://www.timestamps.top/zh/privacy/","summary":"1. 引言 欢迎访问 CrazyKids’s Blog（以下简称”本网站”）。我们重视您的隐私，并致力于保护您的个人信息。本隐私政策旨在说明我们如何收集、使用和保护您的信息。 2. 信息收集 2.1 自动收集的信息 我们可能会自动收集以下信息： 访问日志（IP地址、浏览器类型、访问时间） 设备信息（操作系统、","title":"隐私政策"}]